# OASIS_START
# DO NOT EDIT (digest: 1b460393c5f071bd08b92631413b5bc8)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library redis
"src/redis.cmxs": use_redis
"src/s.cmx": for-pack(Redis)
"src/utils.cmx": for-pack(Redis)
"src/client.cmx": for-pack(Redis)
"src/cache.cmx": for-pack(Redis)
"src/mutex.cmx": for-pack(Redis)
<src/*.ml{,i,y}>: package(bytes)
<src/*.ml{,i,y}>: package(re.str)
<src/*.ml{,i,y}>: package(uuidm)
# Library redis_sync
"src_sync/redis_sync.cmxs": use_redis_sync
<src_sync/*.ml{,i,y}>: package(bytes)
<src_sync/*.ml{,i,y}>: package(re.str)
<src_sync/*.ml{,i,y}>: package(uuidm)
<src_sync/*.ml{,i,y}>: use_redis
# Library redis_lwt
"src_lwt/redis_lwt.cmxs": use_redis_lwt
<src_lwt/*.ml{,i,y}>: package(bytes)
<src_lwt/*.ml{,i,y}>: package(lwt)
<src_lwt/*.ml{,i,y}>: package(lwt.unix)
<src_lwt/*.ml{,i,y}>: package(re.str)
<src_lwt/*.ml{,i,y}>: package(uuidm)
<src_lwt/*.ml{,i,y}>: use_redis
# Executable redis_examples
<examples/examples.{native,byte}>: package(bytes)
<examples/examples.{native,byte}>: package(core)
<examples/examples.{native,byte}>: package(lwt)
<examples/examples.{native,byte}>: package(lwt.unix)
<examples/examples.{native,byte}>: package(re.str)
<examples/examples.{native,byte}>: package(threads)
<examples/examples.{native,byte}>: package(uuidm)
<examples/examples.{native,byte}>: use_redis
<examples/examples.{native,byte}>: use_redis_lwt
<examples/examples.{native,byte}>: use_redis_sync
<examples/*.ml{,i,y}>: package(bytes)
<examples/*.ml{,i,y}>: package(core)
<examples/*.ml{,i,y}>: package(lwt)
<examples/*.ml{,i,y}>: package(lwt.unix)
<examples/*.ml{,i,y}>: package(re.str)
<examples/*.ml{,i,y}>: package(threads)
<examples/*.ml{,i,y}>: package(uuidm)
<examples/*.ml{,i,y}>: use_redis
<examples/*.ml{,i,y}>: use_redis_lwt
<examples/*.ml{,i,y}>: use_redis_sync
# Executable test
<test/test_sync.{native,byte}>: package(bytes)
<test/test_sync.{native,byte}>: package(oUnit)
<test/test_sync.{native,byte}>: package(re.str)
<test/test_sync.{native,byte}>: package(uuidm)
<test/test_sync.{native,byte}>: use_redis
<test/test_sync.{native,byte}>: use_redis_sync
<test/*.ml{,i,y}>: use_redis_sync
# Executable test_lwt
<test/test_lwt.{native,byte}>: package(bytes)
<test/test_lwt.{native,byte}>: package(lwt)
<test/test_lwt.{native,byte}>: package(lwt.unix)
<test/test_lwt.{native,byte}>: package(oUnit)
<test/test_lwt.{native,byte}>: package(re.str)
<test/test_lwt.{native,byte}>: package(uuidm)
<test/test_lwt.{native,byte}>: use_redis
<test/test_lwt.{native,byte}>: use_redis_lwt
<test/*.ml{,i,y}>: package(bytes)
<test/*.ml{,i,y}>: package(lwt)
<test/*.ml{,i,y}>: package(lwt.unix)
<test/*.ml{,i,y}>: package(oUnit)
<test/*.ml{,i,y}>: package(re.str)
<test/*.ml{,i,y}>: package(uuidm)
<test/*.ml{,i,y}>: use_redis
<test/*.ml{,i,y}>: use_redis_lwt
# OASIS_STOP
